{"version":3,"sources":["components/Wrapper/index.js","components/Images/index.js","components/Navbar/Navbar.js","components/Scores/index.js","components/Clicked/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","PlantImage","id","alt","src","image","data-clicked","clicked","onClick","beenClicked","Navbar","style","styles","nav","Scores","yourScore","highScore","Clicked","state","handleIncrement","setState","handleLoss","restartGame","i","images","length","document","getElementById","setAttribute","shuffleImages","j","Math","floor","random","temp","event","target","getAttribute","console","log","this","map","React","Component","App","ReactDOM","render"],"mappings":"isDAOeA,MAJf,SAAiBC,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,yCCmB5BC,MAlBf,SAAoBH,GAGhB,OACI,yBAAKC,UAAU,iBACX,gCACI,yBACIG,GAAIJ,EAAMI,GACVC,IAAKL,EAAMK,IACXC,IAAKN,EAAMO,MACXC,eAAcR,EAAMS,QACpBC,QAASV,EAAMW,iB,gBCLpBC,MARf,SAAgBZ,GACZ,OACI,yBAAKC,UAAU,SAASY,MAAOC,IAAOC,KAClCf,EAAME,WCOHc,EAXA,SAAAhB,GAAK,OAChB,6BACI,0CACiBA,EAAMiB,WAEvB,0CACiBjB,EAAMkB,aCsEhBC,E,4MApEXC,MAAQ,CACJH,UAAW,EACXC,UAAW,G,EAGfG,gBAAkB,WACd,EAAKC,SAAS,CAAEL,UAAW,EAAKG,MAAMH,UAAY,IAE9C,EAAKG,MAAMH,WAAa,EAAKG,MAAMF,WACnC,EAAKI,SAAS,CAAEJ,UAAW,EAAKE,MAAMF,UAAY,K,EAK1DK,WAAa,WACT,EAAKD,SAAS,CAAEL,UAAW,K,EAG/BO,YAAc,WACV,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAOC,OAAQF,IAC/BG,SAASC,eAAeJ,GAAGK,aAAa,gBAAgB,GAI5D,EAAKP,c,EAGTQ,cAAgB,WAGZ,IAAI,IAAIN,EAAIC,EAAOC,OAAO,EAAGF,EAAI,EAAGA,IAAK,CACrC,IAAMO,EAAIC,KAAKC,MAAMD,KAAKE,SAAWV,GAC/BW,EAAOV,EAAOD,GACpBC,EAAOD,GAAKC,EAAOM,GACnBN,EAAOM,GAAKI,I,EAIpBzB,YAAc,SAAC0B,GACuC,SAA9CA,EAAMC,OAAOC,aAAa,iBAC1BC,QAAQC,IAAIJ,EAAMC,QAClBE,QAAQC,IAAI,YACZ,EAAKjB,gBAELa,EAAMC,OAAOR,aAAa,gBAAgB,GAC1CU,QAAQC,IAAIJ,EAAMC,OAAOC,aAAa,gBAAgB,IACtD,EAAKlB,mBAET,EAAKU,iB,uDAGC,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQd,UAAWyB,KAAKtB,MAAMH,UAAWC,UAAWwB,KAAKtB,MAAMF,aAElEQ,EAAOiB,KAAI,SAAApC,GAAK,OACb,kBAAC,EAAD,iBACQA,EADR,CAEII,YAAa,EAAKA,uB,GA7DpBiC,IAAMC,WCGbC,MARf,WACQ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,QCHhBC,IAASC,OAAO,kBAAC,EAAD,MAAQpB,SAASC,eAAe,W","file":"static/js/main.2fc403e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction PlantImage(props) {\n    // console.log(props);\n\n    return (\n        <div className=\"img-container\">\n            <button >\n                <img\n                    id={props.id}\n                    alt={props.alt}\n                    src={props.image}\n                    data-clicked={props.clicked}\n                    onClick={props.beenClicked}\n                />\n            </button>\n        </div>\n    )\n}\n\nexport default PlantImage;","import React from \"react\";\nimport styles from \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar\" style={styles.nav}>\n           {props.children}\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\n\nconst Scores = props => (\n    <div> \n        <p>\n            Your Score: {props.yourScore}\n        </p>\n        <p>\n            High Score: {props.highScore}\n        </p>\n    </div>\n)\n\nexport default Scores;","import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport images from \"../../images.json\";\nimport PlantImage from \"../Images\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Scores from \"../Scores\"\n\n\n\nclass Clicked extends React.Component {\n    state = {\n        yourScore: 0,\n        highScore: 0\n      };\n    \n    handleIncrement = () => {\n        this.setState({ yourScore: this.state.yourScore + 1 });\n\n        if (this.state.yourScore >= this.state.highScore) {\n            this.setState({ highScore: this.state.highScore + 1});\n        }\n        \n    };\n\n    handleLoss = () => {\n        this.setState({ yourScore: 0});\n    }\n\n    restartGame = () => {\n        for (let i = 0; i < images.length; i++) {\n            document.getElementById(i).setAttribute('data-clicked', false);\n            // images[i].clicked = false;\n            // console.log(images[i].clicked);\n        }\n        this.handleLoss();\n    }\n\n    shuffleImages = () => {\n        // loop from https://medium.com/@nitinpatel_20236/how-to-shuffle-correctly-shuffle-an-array-in-javascript-15ea3f84bfb\n        // console.log(images);\n        for(let i = images.length-1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i)\n            const temp = images[i]\n            images[i] = images[j]\n            images[j] = temp\n          }\n    }\n\n    beenClicked = (event) => {\n        if (event.target.getAttribute('data-clicked') === \"true\") {\n            console.log(event.target);\n            console.log(\"you lost\");\n            this.restartGame();\n        } else {\n            event.target.setAttribute('data-clicked', true);\n            console.log(event.target.getAttribute('data-clicked', true))\n            this.handleIncrement();\n        }\n        this.shuffleImages();\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Navbar>\n                    <Scores yourScore={this.state.yourScore} highScore={this.state.highScore}/>\n                </Navbar>\n                {images.map(image => (\n                    <PlantImage \n                        {...image} \n                        beenClicked={this.beenClicked}\n                        />\n                ))}\n            </Wrapper>\n        )\n    }\n}\n\nexport default Clicked;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Clicked from \"./components/Clicked\"\n\nfunction App () {\n        return (\n            <Wrapper>\n                <Clicked></Clicked>\n            </Wrapper>\n        )\n    } \n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}