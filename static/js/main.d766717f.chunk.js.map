{"version":3,"sources":["components/Wrapper/index.js","components/Images/index.js","components/Navbar/Navbar.js","components/Scores/index.js","components/Clicked/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","PlantImage","console","log","id","alt","src","image","data-clicked","clicked","onClick","beenClicked","Navbar","style","styles","nav","Scores","scores","yourScore","highScore","Clicked","state","images","handleIncrement","setState","handleLoss","restartGame","map","shuffleImages","i","length","j","Math","floor","random","temp","event","parseInt","target","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qgFAOeA,MAJf,SAAiBC,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,yCCmB5BC,MAlBf,SAAoBH,GAGhB,OADAI,QAAQC,IAAIL,EAAMM,IAEd,yBAAKL,UAAU,iBAEP,yBACIK,GAAIN,EAAMM,GACVC,IAAKP,EAAMO,IACXC,IAAKR,EAAMS,MACXC,eAAcV,EAAMW,QACpBC,QAASZ,EAAMa,gB,gBCLpBC,MARf,SAAgBd,GACZ,OACI,yBAAKC,UAAU,SAASc,MAAOC,IAAOC,KAClCjB,EAAME,W,gBCQHgB,EAXA,SAAAlB,GAAK,OAChB,yBAAKe,MAAOA,IAAMI,OAAQlB,UAAU,UAChC,2CACiBD,EAAMoB,WAEvB,2CACiBpB,EAAMqB,aC4EhBC,E,4MA3EXC,MAAQ,CACJH,UAAW,EACXC,UAAW,EACXG,OAAQA,G,EAOZC,gBAAkB,WACd,EAAKC,SAAS,CAAEN,UAAW,EAAKG,MAAMH,UAAY,IAE9C,EAAKG,MAAMH,WAAa,EAAKG,MAAMF,WACnC,EAAKK,SAAS,CAAEL,UAAW,EAAKE,MAAMF,UAAY,K,EAK1DM,WAAa,WACT,EAAKD,SAAS,CAAEN,UAAW,K,EAG/BQ,YAAc,WACV,EAAKL,MAAMC,OAAOK,KAAI,SAACpB,GACnBA,EAAME,SAAU,KAEpB,EAAKgB,c,EAGTG,cAAgB,WAGZ,IAAI,IAAIC,EAAI,EAAKR,MAAMC,OAAOQ,OAAO,EAAGD,EAAI,EAAGA,IAAK,CAChD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOb,EAAOO,GACpBP,EAAOO,GAAKP,EAAOS,GACnBT,EAAOS,GAAKI,EAEhB,OAAOb,G,EAGXX,YAAc,SAACyB,GACX,EAAKf,MAAMC,OAAOK,KAAI,SAACpB,GACjB8B,SAASD,EAAME,OAAOlC,MAAQG,EAAMH,MAChB,IAAlBG,EAAME,SACN,EAAKc,kBACLhB,EAAME,SAAU,GAEhB,EAAKiB,kBAIb,EAAKF,SAAS,CACVF,OAAQ,EAAKM,mB,uDAIX,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQV,UAAWqB,KAAKlB,MAAMH,UAAWC,UAAWoB,KAAKlB,MAAMF,aAElEoB,KAAKlB,MAAMC,OAAOK,KAAI,SAAApB,GAAK,OACxB,kBAAC,EAAD,iBACQA,EADR,CAEII,YAAa,EAAKA,uB,GApEpB6B,IAAMC,WCIbC,MATf,WACQ,OAEI,kBAAC,EAAD,KACI,kBAAC,EAAD,QCJhBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.d766717f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction PlantImage(props) {\n    // console.log(props);\n    console.log(props.id);\n    return (\n        <div className=\"img-container\">\n            {/* <button > */}\n                <img\n                    id={props.id}\n                    alt={props.alt}\n                    src={props.image}\n                    data-clicked={props.clicked}\n                    onClick={props.beenClicked}\n                />\n            {/* </button> */}\n        </div>\n    )\n}\n\nexport default PlantImage;","import React from \"react\";\nimport styles from \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar\" style={styles.nav}>\n           {props.children}\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport style from \"./style.css\";\n\nconst Scores = props => (\n    <div style={style.scores} className=\"scores\"> \n        <h3>\n            Your Score: {props.yourScore}\n        </h3>\n        <h3>\n            High Score: {props.highScore}\n        </h3>\n    </div>\n)\n\nexport default Scores;","import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport images from \"../../images.json\";\nimport PlantImage from \"../Images\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Scores from \"../Scores\"\n\n\n\nclass Clicked extends React.Component {\n    state = {\n        yourScore: 0,\n        highScore: 0,\n        images: images,\n    };\n    \n    // componentDidMount() {\n    //     this.shuffleImages();\n    // };\n\n    handleIncrement = () => {\n        this.setState({ yourScore: this.state.yourScore + 1 });\n\n        if (this.state.yourScore >= this.state.highScore) {\n            this.setState({ highScore: this.state.highScore + 1});\n        }\n        \n    };\n\n    handleLoss = () => {\n        this.setState({ yourScore: 0});\n    }\n\n    restartGame = () => {\n        this.state.images.map((image) => {\n            image.clicked = false;\n        })\n        this.handleLoss();\n    }\n\n    shuffleImages = () => {\n        // loop from https://medium.com/@nitinpatel_20236/how-to-shuffle-correctly-shuffle-an-array-in-javascript-15ea3f84bfb\n        // console.log(images);\n        for(let i = this.state.images.length-1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i)\n            const temp = images[i]\n            images[i] = images[j]\n            images[j] = temp\n        }\n        return images;\n    }\n\n    beenClicked = (event) => {\n        this.state.images.map((image) => {\n          if (parseInt(event.target.id) === image.id) {\n            if (image.clicked === false) {\n                this.handleIncrement();\n                image.clicked = true;\n            } else {\n                this.restartGame();\n            }\n          }\n        });\n        this.setState({\n            images: this.shuffleImages()\n        });\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Navbar>\n                    <Scores yourScore={this.state.yourScore} highScore={this.state.highScore}/>\n                </Navbar>\n                {this.state.images.map(image => (\n                    <PlantImage \n                        {...image}\n                        beenClicked={this.beenClicked}\n                        />\n                ))}\n            </Wrapper>\n        )\n    }\n}\n\nexport default Clicked;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Clicked from \"./components/Clicked\"\n\nfunction App () {\n        return (\n            \n            <Wrapper>\n                <Clicked></Clicked>\n            </Wrapper>\n        )\n    } \n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}